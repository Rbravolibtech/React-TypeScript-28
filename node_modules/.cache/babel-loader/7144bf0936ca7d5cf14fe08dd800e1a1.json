{"ast":null,"code":"var _jsxFileName = \"/Users/robertobravo/Documents/Github/React/React-TypeScript-28/src/components/NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    var _todoTextInputRef$cur;\n\n    event.preventDefault();\n    const enteredText = (_todoTextInputRef$cur = todoTextInputRef.current) === null || _todoTextInputRef$cur === void 0 ? void 0 : _todoTextInputRef$cur.value;\n\n    if (enteredText.trim().length === 0) {\n      return;\n    }\n\n    props.onAddTodo(enteredText || ''); // Provide a default value if enteredText is undefined\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useRef","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddTodo"],"sources":["/Users/robertobravo/Documents/Github/React/React-TypeScript-28/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef } from \"react\"\n\n\nconst NewTodo: React.FC<{onAddTodo: (text: string) => void }> = (props) => {\nconst todoTextInputRef = useRef<HTMLInputElement>(null);\n\n\nconst submitHandler = (event: React.FormEvent) => {\nevent.preventDefault()\n\nconst enteredText = todoTextInputRef.current?.value\n\nif (enteredText.trim().length === 0) {\n    return;\n}\n\n\nprops.onAddTodo(enteredText || ''); // Provide a default value if enteredText is undefined\n\n}\n\n\n    return ( \n    <form onSubmit={submitHandler}>\n        <label htmlFor=\"text\">Todo Text</label>\n        <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\n        <button>Add Todo</button>\n    </form>\n    )\n}\n\nexport default NewTodo;"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;;AAGA,MAAMC,OAAuD,GAAIC,KAAD,IAAW;EAAA;;EAC3E,MAAMC,gBAAgB,GAAGH,MAAM,CAAmB,IAAnB,CAA/B;;EAGA,MAAMI,aAAa,GAAIC,KAAD,IAA4B;IAAA;;IAClDA,KAAK,CAACC,cAAN;IAEA,MAAMC,WAAW,4BAAGJ,gBAAgB,CAACK,OAApB,0DAAG,sBAA0BC,KAA9C;;IAEA,IAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;MACjC;IACH;;IAGDT,KAAK,CAACU,SAAN,CAAgBL,WAAW,IAAI,EAA/B,EAVkD,CAUd;EAEnC,CAZD;;EAeI,oBACA;IAAM,QAAQ,EAAEH,aAAhB;IAAA,wBACI;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAED;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAOH,CA1BD;;GAAMF,O;;KAAAA,O;AA4BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}